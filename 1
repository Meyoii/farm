-- üü¢ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
repeat task.wait() until game:IsLoaded()
repeat task.wait() until game:GetService("Players").LocalPlayer
repeat task.wait() until game:GetService("ReplicatedStorage"):FindFirstChild("Modules")
repeat task.wait() until game:GetService("ReplicatedStorage").Modules:FindFirstChild("NetworkFramework")
repeat task.wait() until game:GetService("ReplicatedStorage").Modules.NetworkFramework:FindFirstChild("NetworkEvent")

task.wait(2) -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏ú‡∏∑‡πà‡∏≠ asset ‡∏´‡∏£‡∏∑‡∏≠ attribute ‡∏¢‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö

-- üü¢ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠ AFK
local VirtualUser = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- üß† ‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- üü° ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏≤‡∏¢ (‡πÄ‡∏•‡∏∑‡∏≠‡∏î <= 1 ‡∏à‡∏∞‡πÄ‡∏ï‡∏∞)
spawn(function()
    local function monitorCharacter(char)
        if not char then return end
        local humanoid = char:FindFirstChildOfClass("Humanoid") or char:WaitForChild("Humanoid", 5)
        if not humanoid then return end

        humanoid.HealthChanged:Connect(function(health)
            if health and health <= 1 then
                task.wait(0.2)
                pcall(function()
                    player:Kick("‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 1 ‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏°")
                end)
            end
        end)
    end

    if player.Character then
        monitorCharacter(player.Character)
    end
    player.CharacterAdded:Connect(monitorCharacter)
end)

-- ‚öôÔ∏è ‡∏™‡πà‡∏ß‡∏ô Network
local status = player:WaitForChild("Status")
local NetworkEvent = ReplicatedStorage.Modules.NetworkFramework.NetworkEvent

-- ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Å‡∏¥‡∏ô/‡∏î‡∏∑‡πà‡∏°
local RemoteArgsWater = {"fire", [3] = "Use Item", [4] = "Water"}
local RemoteArgsFood  = {"fire", [3] = "Use Item", [4] = "Bread"}

local hasUsedWater = false
local hasUsedFood  = false

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ Pickaxe
local args = {"fire", nil, "Use Tool", "Pickaxe"}
NetworkEvent:FireServer(unpack(args))

-- üì¶ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡πà‡∏≠‡∏¢ ‡πÜ ‡πÑ‡∏õ‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏ú‡∏•‡πà
local function teleportUndergroundThenPop(hrp, targetCFrame, maxStep, stepDelay)
    maxStep = maxStep or 300
    stepDelay = stepDelay or 1

    hrp.Anchored = true
    local undergroundOffset = 1
    local startPos = hrp.Position - Vector3.new(0, undergroundOffset, 0)
    local targetPosUnderground = targetCFrame.Position - Vector3.new(0, undergroundOffset, 0)
    hrp.CFrame = CFrame.new(startPos, targetPosUnderground)

    local dist = (targetPosUnderground - startPos).Magnitude
    local steps = math.max(1, math.ceil(dist / maxStep))

    for i = 1, steps do
        local alpha = i / steps
        local newPos = startPos:Lerp(targetPosUnderground, alpha)
        hrp.CFrame = CFrame.new(newPos, targetCFrame.Position)
        task.wait(stepDelay)
    end

    hrp.CFrame = targetCFrame
    hrp.Anchored = false
end

-- üîÅ AutoFarm Loop ‡∏´‡∏•‡∏±‡∏Å
local function AutoFarmLoop()
    while true do
        local char = player.Character or player.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")

        -- ‡∏à‡∏∏‡∏î‡∏Ç‡∏∏‡∏î‡∏´‡∏¥‡∏ô
        local targetCFrame1 = CFrame.new(
          -240.629974, 14.6281853, -2458.94849, -0.941889822, 1.50447566e-08, 0.335921943,
           2.6380663e-08, 1, 2.91821411e-08, -0.335921943, 3.63482044e-08, -0.941889822
        )
        teleportUndergroundThenPop(hrp, targetCFrame1, 300, 1)
        task.wait(2)

        local humanoid = char:WaitForChild("Humanoid")
        humanoid:MoveTo(Vector3.new(-242.078705, 12.5401459, -2452.75781))

        -- ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡πà‡∏≤ Rock
        local inventory = player:WaitForChild("Inventory")
        local lastValue, sameCount = nil, 0

        while task.wait(0.5) do
            local RockValue = inventory:GetAttribute("Rock")
            if RockValue then
                print("Rock =", RockValue)

                if RockValue == lastValue then
                    sameCount += 1
                else
                    sameCount, lastValue = 0, RockValue
                end

                if sameCount >= 50 then
                    warn("Rock ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô 30 ‡∏£‡∏≠‡∏ö ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô ‚Äî ‡∏ß‡∏≤‡∏õ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà")
                    break
                end

                if RockValue >= 100 then
                    break
                end
            else
                warn("‡πÑ‡∏°‡πà‡∏û‡∏ö Attribute 'Rock'")
                break
            end
        end

        -- ‡∏´‡∏¢‡∏∏‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏° (‡∏™‡πà‡∏á‡∏£‡∏µ‡πÇ‡∏°‡∏ó)
        NetworkEvent:FireServer("fire", nil, "BrakAutoFarm")
        task.wait(2)

        -- ‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ Safe
        local targetCFrame = CFrame.new(
            1932.3092, 14.4683819, 2293.3103,
            -0.184279501, 3.30193686e-08, 0.982873857,
            -3.51323837e-09, 1, -3.42534143e-08,
            -0.982873857, -9.76527215e-09, -0.184279501
        )
        teleportUndergroundThenPop(hrp, targetCFrame, 300, 1)
        task.wait(2)

        -- ‡∏¢‡πâ‡∏≤‡∏¢ Rock ‡πÑ‡∏õ Safe
        NetworkEvent:FireServer(
            "fire", nil, "Move Item",
            player.Inventory, player.Safe,
            "Rock", 100
        )
        task.wait(2)

        -- ‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ Supermarket
        local targetCFrame2 = CFrame.new(
            3001.08984, 14.5380421, 2279.85352,
            -0.68775034, 3.05635489e-10, 0.72594732,
             1.54405133e-09, 1, 1.04179232e-09,
            -0.72594732, 1.8373929e-09, -0.68775034
        )
        teleportUndergroundThenPop(hrp, targetCFrame2, 300, 1)
        task.wait(2)

        -- ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏ô‡∏ô‡πâ‡∏≥
        NetworkEvent:FireServer("fire", nil, "Supermarket", "Water", 15)
        NetworkEvent:FireServer("fire", nil, "Supermarket", "Bread", 15)

        print("üîÅ ‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ")
        task.wait(2)
    end
end

-- üçû ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏¥‡∏ô/‡∏î‡∏∑‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
local function AutoEatDrinkLoop()
    while true do
        task.wait(1)
        local thirsty = status:GetAttribute("Thirsty") or 0
        local hunger  = status:GetAttribute("Hunger") or 0

        if thirsty < 70 and not hasUsedWater then
            NetworkEvent:FireServer(unpack(RemoteArgsWater))
            hasUsedWater = true
            print("üíß ‡πÉ‡∏ä‡πâ Water ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Thirsty =", thirsty)
        elseif thirsty >= 70 and hasUsedWater then
            hasUsedWater = false
        end

        if thirsty >= 70 then
            if hunger < 70 and not hasUsedFood then
                NetworkEvent:FireServer(unpack(RemoteArgsFood))
                hasUsedFood = true
                print("üçû ‡πÉ‡∏ä‡πâ Bread ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Hunger =", hunger)
            elseif hunger >= 70 and hasUsedFood then
                hasUsedFood = false
            end
        end
    end
end

-- ü¶ò Auto Jump
getgenv().AutoJump = true
spawn(function()
    while task.wait(2) do 
        if not getgenv().AutoJump then break end
        local char = player.Character or player.CharacterAdded:Wait()
        local humanoid = char:FindFirstChildOfClass("Humanoid") or char:WaitForChild("Humanoid")
        if humanoid and humanoid.Health > 0 then
            humanoid.Jump = true
        end
    end
end)

-- üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
spawn(AutoFarmLoop)
spawn(AutoEatDrinkLoop)
